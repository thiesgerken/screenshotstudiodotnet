<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ask" xml:space="preserve">
    <value>Benutzerauswahl</value>
  </data>
  <data name="Bounds" xml:space="preserve">
    <value>Maße</value>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>Verzögerung</value>
  </data>
  <data name="DeleteAllQInstruction" xml:space="preserve">
    <value>Wollen Sie wirklich alle History-Einträge löschen?</value>
  </data>
  <data name="DeleteAllQText" xml:space="preserve">
    <value>Diese Aktion wird die gesamte History löschen und kann nicht wieder rückgängig gemacht werden.</value>
  </data>
  <data name="DeleteEntryQInstruction" xml:space="preserve">
    <value>Wollen Sie diesen History-Eintrag wirklich löschen?</value>
  </data>
  <data name="DeleteEntryQText" xml:space="preserve">
    <value>Der Eintrag wird unwiederbringlich verloren sein.</value>
  </data>
  <data name="DeleteLogQInstruction" xml:space="preserve">
    <value>Wollen Sie das Log wirklich löschen?</value>
  </data>
  <data name="DeleteLogQText" xml:space="preserve">
    <value>Die Einträge können zum Aufspüren von Fehlern nützlich sein.</value>
  </data>
  <data name="DontAskAgain" xml:space="preserve">
    <value>Nicht wieder nachfragen</value>
  </data>
  <data name="Ellipse" xml:space="preserve">
    <value>Ellipse</value>
  </data>
  <data name="ErrorLoading" xml:space="preserve">
    <value>Fehler beim Laden des Screenshots</value>
  </data>
  <data name="FileSize" xml:space="preserve">
    <value>Dateigröße</value>
  </data>
  <data name="FileSizeError" xml:space="preserve">
    <value>Die Dateigröße konnte nicht ermittelt werden.</value>
  </data>
  <data name="Found" xml:space="preserve">
    <value>gefunden</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Eintrag</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Einträge</value>
  </data>
  <data name="Macro" xml:space="preserve">
    <value>Informationen zum benutzten Makro</value>
  </data>
  <data name="MacroName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="MultipleInterval" xml:space="preserve">
    <value>Intervall der Screenshots</value>
  </data>
  <data name="NoEntry" xml:space="preserve">
    <value>Keine Elemente gefunden</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Nummer des Screenshots</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Ausgabe</value>
  </data>
  <data name="OutputInformation" xml:space="preserve">
    <value>Informationen des Ausgabe-Plugins</value>
  </data>
  <data name="OutputsUsed" xml:space="preserve">
    <value>Verwendete Ausgabe</value>
  </data>
  <data name="ProcessName" xml:space="preserve">
    <value>(nur Fenster) Prozessname</value>
  </data>
  <data name="Rectangle" xml:space="preserve">
    <value>Rechteck</value>
  </data>
  <data name="Relevance" xml:space="preserve">
    <value>Relevanz</value>
  </data>
  <data name="Screenshot" xml:space="preserve">
    <value>Screenshot</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Suchen</value>
  </data>
  <data name="searchError" xml:space="preserve">
    <value>Beim Suchen trat ein Fehler auf.</value>
  </data>
  <data name="searching" xml:space="preserve">
    <value>Suche ...</value>
  </data>
  <data name="Shape" xml:space="preserve">
    <value>(nur Auswahl) Form</value>
  </data>
  <data name="TimeTaken" xml:space="preserve">
    <value>Aufnahmedatum</value>
  </data>
  <data name="TotalNumber" xml:space="preserve">
    <value>Gesamtanzahl der Screenshots</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Screenshottyp</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>(nur Fenster) Fenstertitel</value>
  </data>
  <data name="_date" xml:space="preserve">
    <value>Datum</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Keine Ausgabe</value>
  </data>
  <data name="WebsiteUrl" xml:space="preserve">
    <value>(nur Webseite) Url</value>
  </data>
  <data name="Screens" xml:space="preserve">
    <value>Bildschirme</value>
  </data>
  <data name="_default" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="colorError" xml:space="preserve">
    <value>Es gibt bereits ein Farbset mit dem selben Namen.</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="createTask" xml:space="preserve">
    <value>Bitte gib einen Namen für das Farbset ein.</value>
  </data>
  <data name="createText" xml:space="preserve">
    <value>Neues Farbset erstellen</value>
  </data>
  <data name="creationFailed" xml:space="preserve">
    <value>Erstellung fehlgeschlagen</value>
  </data>
  <data name="showQS" xml:space="preserve">
    <value>Quickstart anzeigen</value>
  </data>
</root>